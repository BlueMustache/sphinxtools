//--------------------------------------
//--- 010 Editor v6.0.3 Binary Template
//
//     File: Sphinx Filelist.bin descriptor
//   Author: Swyter
// Revision: 2016-02-28
//  Purpose: For the GameCube/PAL version
//--------------------------------------

BigEndian();

uint magic;                     /* Always 5 (?) */
uint total_size <format=hex>;   /* Total file size */
uint list_item_count;           /* Number of files listed in here */
uint unk <format=hex>;          /* 0x00010000, no idea, seems like a flag */
uint next_section <format=hex>; /* + 10h (address relative to this field).
                                   Points to an array of null-terminated relative pointers of `list_item_count` size (each of them 4 bytes long)
                                   that goes right after the listed items. This array stores filenames and shares index with its list item, so you can
                                   retrieve the filename of every entry by getting its index and doing ptr_offset + ptr_content */
struct
{
    uint len;
    uint hash <format=hex>;
    uint ver;
    uint unk_flags <format=hex>;
    uint always_one;
    uint loc_addr <format=hex>;
    uint loc_file;
}list_item[list_item_count];

uint string_pointer_array[list_item_count];  // 2424/4 = 606
// total size of the string blob => 23724 bytes
// maximum size of incremental numbers => 23669

// addr 23669 points to the last string minus 4 (an uint as big as the field itself)
// each pointer is relative to the string blob start minus its own size
// str_base + (str_ptr - 4)
//    19412 + (23644   - 4) $ 43048 [A828h] (nope)
//    19412 + (23669   - 4) = 43077 [A845h]


// wait, it's simpler than that, measuring from the right location
// back it gives us the original pointer position, like this:

// cur_offset + contents = string_start
//      16988 +     2424 = 19412 [4BD4h] OK // 1st array entry
//      19404 +    23644 = 43048 [A828h] OK // last - 1
//      19408 +    23669 = 43077 [A845h] OK // last


//string str; // at 0x4BD4 // size: 2Ch
//string strb; // at 0x4BD4 // size: 2Ch
struct
{
    string ss <optimize=false>;
}ss[list_item_count] <optimize=false>;
// 2464 - 2424 >>> Result = 40 [28h]
// 2495 - 2464 >>> Result = 31 [1Fh]

local uint i;
local uint filename_addr;
local string filename_stri;

for (i=0; i<list_item_count; i++)
{
    filename_addr = startof(string_pointer_array[i]) + string_pointer_array[i];
    filename_stri = ReadString(filename_addr);

    Printf("\nFile:    %s (string at %#x)    \n Len:    %u    \n Ver:    %u    \nFlag:    %u    \nHash:    %#x   \n Loc:   %9x:%03u\n--\n",
        filename_stri,
        filename_addr,
        list_item[i].len,
        list_item[i].ver,
        list_item[i].unk_flags,
        list_item[i].hash,
        list_item[i].loc_addr,
        list_item[i].loc_file
    );
}
